
# =================================================================
# General configuration


# associated file formats to lookup when loading GROMACS Input file
# (tpr must be set to 'yes', other formats can be added)
[supported_input_formats]
tpr: yes
gro: yes
top: yes
itp: yes
rtp: yes

# Enabling lookup results in associated files (by name) being loaded alongside with GROMACS Input file (.tpr)
# which may contain information not included in .tpr file.
# In relaxed lookup mode set to no, associated files need to match exactly with the basename w/o extension
# of the GROMACS Input file. Otherwise, only prefix match is required (which might associate files incorrectly and
# fail at loading later on)
[input_lookup]
perform_lookup: yes
input_lookup_relaxed_name_requirements: no

[resolution]
# Timeouts may be enabled simulation-wide (0 ~> no timeouts) or per-resolver below
timeout_sec_simulation: 1200
# If the simulation has been already resolved, all matched (partially or based on similarity) molecules will be skipped
# Unmatched molecules will be resolved only if retry_failed_resolution is set to yes.
# If resolution hasn't been started on the simulation yet, this has no effect
retry_failed_resolution: yes

# identity and similarity matches are always cached in order to avoid repeated lookups to remote databases
[cache]
directory: .
file: cache.sqlite3


# =================================================================
# Online and offline databases configuration

[ALPHAFIND]
enabled: yes
# AlphaFind API works by queuing the pdb file and then checking whether results are available
# following, it is possible how many <<checks for results>> will be performed, what should be delay between them
# as well as how long can a CURL API request last
retry_count: 15
retry_delay_s: 45
request_timeout_s: 30

[CHEMBL]
enabled: yes

[CHEMBL_SMILES_LOOKUP__SIMILARITY_THRESHOLD]
# minimum percentage similarity for CHEMBL similarity search
threshold: 60

[PUBCHEM]
enabled: yes

[PUBCHEM_SMILES_LOOKUP__SIMILARITY_THRESHOLD_ATTEMPTS]
# thresholds for PUBCHEM similarity search. Too low and the search may timeout. Too high and search might return nothing
# it is possible to uncomment or add more entries that will be checked in the order of the smallest to the highest
#ATTEMPT_A: 40
#ATTEMPT_B: 60
#ATTEMPT_C: 80
#ATTEMPT_D: 90
ATTEMPT_E: 95
#ATTEMPT_F: 98

[PDB]
enabled: yes
timeout_sec: 60
# queries to RCSB PDB structure search need to temporarily create a .PDB file
temporary_directory: temp

# queries to RCSB PDB structure search need to be uploaded to online server from which they can be referenced by URL
# following, two commands (upload and delete) are defined, each part of a command on a separate line
[PDB_UPLOAD_UPLOAD_COMMAND]
0 = scp
1 = {FILEPATH}
2 = xpavlik8@aisa.fi.muni.cz:/home/xpavlik8/public_html/{FILENAME}
# requires {FILEPATH} (path to source local file) and {FILENAME} {name of the file on remote}

[PDB_UPLOAD_DELETE_COMMAND]
0 = ssh
1 = xpavlik8@aisa.fi.muni.cz
2 = rm /home/xpavlik8/public_html/{FILENAME}
# requires {FILENAME} {name of the file on remote}

# finally, upon successful upload, the .PDB file must be available by public URL link
[PDB_UPLOAD_URL]
url: https://www.fi.muni.cz/~xpavlik8/{FILENAME}
# requires {FILENAME} {name of the file on remote}


[BLAST]
# if <<use_local_instance>> is set to no, the workflow has to download results into temporary directory
temporary_directory: temp
# if <<use_local_instance>> is set to no, the workflow should reference the mail to NCBI services
remote_instance_mail: your.mail@here.cz


use_local_instance: yes
# local executables (from blast+)
local_instance_blastp_exec: /usr/bin/blastp
local_instance_blastn_exec: /usr/bin/blastn
# local amino acid and nucleotide databases
# beware that path points to database name, e.g. <database_dir>/<db_name_without_extensions>
local_instance_database_prot: /home/tomsko/tmp/blast_pdb/pdb
local_instance_database_nt: /home/tomsko/tmp/blast_pdbn/pdbnt
# optimize BLAST search for short sequences if query is shorter than X nucleotides
local_instance_run_short_search_if_under_X_residues: 30

# BLAST requirements for exact matches (identity identification)
exact_match_max_evalue: 1e-50
exact_match_min_bits: 51
exact_match_min_identity_p: 0.99
exact_match_min_query_cov_p: 0.99

# BLAST requirements for similarity matches (similarity-based identification)
similarity_match_max_evalue: 0.1
similarity_match_min_bits: 20
similarity_match_min_identity_p: 0.4
similarity_match_min_query_cov_p: 0.15

[ZENODO]
enabled: yes

# =================================================================
# Resolver-specific configuration

# [resolver_name]
# enabled: yes            // if set to no, the resolver is skipped
# enabled_similarity: yes // if set to no, resolver won't be used for similarity-based identification
# from_cache: yes         // if set to yes, resolver will utilize cache to fetch identifiers
# from_search: yes        // if set to yes, resolver will utilize database searches to fetch identifiers
#                         // if both are set to no, the resolver won't resolve any identifiers
# allow_export: yes       // if set to no, resolver won't be used for debug export (discover mode)
# timeout_sec: 10         // global timeout for identifying one signature


# identifying atoms in simulations, identity and similarity based
[atom]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 10

# identifying atoms in simulations, similarity based on with alternate sources of information
[atom_aprox]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 10

# identifying chemical compounds (and lipids, carbohydrates) in simulations, identity and similarity based
[chem]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 300
# allow resolver to utilize PUBCHEM for resolution (these searches take time and may timeout the whole resolver)
allow_pubchem_fetch: yes
# allow resolver to utilize CHEMBL for resolution (usually quick and safe)
allow_chembl_fetch: yes

# identifying chemical compounds (and lipids, carbohydrates) in simulations, identity and similarity based
# based on with alternate sources of information
[chem_aprox]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 300
allow_pubchem_fetch: yes
allow_chembl_fetch: yes

# identifying proteins in simulations using their amino acid sequence, identity and similarity based
[protein]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 300
# protein resolver reconstructs residue sequence from the fragment using graphs of interconnected residues,
# finding the longest path (i.e. residue sequence)
# in strict mode, protein sequence must start with Methionine
determine_sequence_strict_mode: no
# in partial mode, protein sequence can be shorter than number of residues in the fragment
determine_sequence_partial_mode: no

# identifying proteins in simulations using their structure, identity and similarity based
[protein-struct]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 300

# identifying proteins in simulations using their amino acid sequence, identity and similarity based
# based on with alternate sources of information
[protein-residue-sequence]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 300

# identifying proteins in simulations using their structure, identity and similarity based
# based on with alternate sources of information
[protein-residue-struct]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 300

# identifying nucleic acids in simulations, identity and similarity based
# based on with alternate sources of information
[nucleic_acid]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 300
# only consider fragment if residues are correctly named
require_residue_names: no

# identifying chemical compounds in simulations using their name, identity based
[chem_ligand_name]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 300
# minimum name length to be applicable for this resolver
minimum_name_len: 3

# identifying fragments in simulations using their hash, identity based
[fingerprint]
enabled: yes
enabled_similarity: yes
from_cache: yes
from_search: yes
allow_export: yes
timeout_sec: 10
# if a fragment cannot be resolved by other resolvers, its hash is automatically generated and saved
unknown_fingerprints_export_dir: unknown_hashes


# =================================================================
# Metadata-fetcher-specific configuration

# [metadata_fetcher]
# enabled: yes                  // if set to yes, the fetcher will be used
# fetch_full_metadata: no       // if set to no, only names and synonyms metadata part will be retrieved
# processes_ident_type: InChI   // identifiers resolved by the fetcher
# only_identity_matches: yes    // if set to yes, similarity-based resolutions are not fetched
# timeout_sec: 30               // timeout for fetching metadata

[metadata_chembl]
enabled: yes
fetch_full_metadata: no
processes_ident_type: InChI
only_identity_matches: yes
timeout_sec: 30

[metadata_pdb]
enabled: yes
fetch_full_metadata: no
processes_ident_type: PDB
only_identity_matches: yes
timeout_sec: 30

[metadata_zenodo]
enabled: yes
fetch_full_metadata: no
processes_ident_type: ---
only_identity_matches: no
timeout_sec: 30
